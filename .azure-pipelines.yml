# https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema
# https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/index

trigger:
  branches:
    include:
    - master

jobs:
- job: Linux

  pool:
    vmImage: 'ubuntu-16.04'

  steps:
  - checkout: self
    fetchDepth: 50
    submodules: false

  - script: |
      echo "Test jobs:"
      ./wpt test-jobs | while read job; do
        echo "$job"
        echo "##vso[task.setvariable variable=run_$job;isOutput=true]true";
      done
    displayName: './wpt test-jobs'
    name: test_jobs

  - script: |
      # TODO: `./wpt tests-affected --no-manifest-update` or teach
      #       `./wpt tests-affected` to download if possible.
      ./wpt manifest
      ./wpt tests-affected > tests-affected.txt
      if [ -s tests-affected.txt ]; then
        echo "##vso[task.setvariable variable=run_affected_tests;isOutput=true]true"
        echo "Affected tests:"
        cat tests-affected.txt
      else
        echo "No affected tests"
      fi
    displayName: './wpt tests-affected'
    name: tests_affected

- job: macOS
  dependsOn: Linux
  condition: or(dependencies.Linux.outputs['test_jobs.run_wptrunner_infrastructure'], dependencies.Linux.outputs['tests_affected.run_affected_tests'])

  variables:
    run_wptrunner_infrastructure: $[ dependencies.Linux.outputs['test_jobs.run_wptrunner_infrastructure'] ]
    run_affected_tests: $[ dependencies.Linux.outputs['tests_affected.run_affected_tests'] ]

  pool:
    vmImage: 'macOS-10.13'

  steps:
  - checkout: self
    fetchDepth: 50
    submodules: false

  - script: |
      ./wpt manifest
    displayName: 'Update manifest'

  - script: |
      ./tools/ci/install.sh
    displayName: 'Install Safari Technology Preview'

  - script: |
      no_proxy='*' ./wpt run --yes --no-manifest-update --manifest MANIFEST.json --metadata infrastructure/metadata/ --channel=preview safari_webdriver infrastructure/
    displayName: 'Run infrastructure/ tests'
    condition: variables.run_wptrunner_infrastructure

  - script: |
      # TODO: https://github.com/web-platform-tests/wpt/issues/13564 here and below
      no_proxy='*' ./wpt run --yes --no-manifest-update --no-pause --no-restart-on-unexpected --no-fail-on-unexpected --log-wptreport=$(Build.ArtifactStagingDirectory)/wpt_report.json --channel=preview safari_webdriver `cat ../tests-affected.txt`
    displayName: 'Run affected tests'
    condition: variables.run_affected_tests

  - script: |
      git checkout --force `./wpt branch-point`
      # No --no-manifest-update because it does have to be updated now.
      # TODO: map renamed files in tests-affected.txt, or run `./wpt tests-affected HEAD@{1}`
      no_proxy='*' ./wpt run --yes --no-pause --no-restart-on-unexpected --no-fail-on-unexpected --log-wptreport=$(Build.ArtifactStagingDirectory)/wpt_report_without_changes.json --channel=preview safari_webdriver `cat ../tests-affected.txt`
    displayName: 'Run affected tests (without changes)'
    condition: variables.run_affected_tests
    continueOnError: true

    # https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/publish-build-artifacts
  - task: PublishBuildArtifacts@1
    displayName: 'Publish artifacts'
    condition: succeededOrFailed()
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'artifacts'
